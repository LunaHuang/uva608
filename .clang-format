#
# Copyright (C) 2019 Weintek Labs, Inc.
#
# You may use this file under the terms of the 3-clause BSD license.
# See the file LICENSE from this package for details.
#
# This is the clang-format configuration style to be used by Weintek
# OS Team's common C++ projects.
#
# For Qt's related project, you should use another .clang-format file.
# You can download it from:
#
#  https://github.com/qt/qt5/blob/5.12/_clang-format
#
# For more info on Clang-Format Style Options, please see:
#
#  https://clang.llvm.org/docs/ClangFormatStyleOptions.html
#
---
BasedOnStyle: WebKit

Standard: Cpp11

# Leave the line breaks up to the user.
# Note that this may be changed at some point in the future.
ColumnLimit: 0
# How much weight do extra characters after the line length limit have.
# PenaltyExcessCharacter: 4

# We want a space between the type and the star for pointer types.
PointerBindsToType: false

# We use template< without space.
SpaceAfterTemplateKeyword: false

# spaces will be inserted after < and before > in template argument lists.
SpacesInAngles: true

# spaces should not be inserted after [ and before ].
SpacesInSquareBrackets: false

# We want to break before the operators, but not before a '='.
BreakBeforeBinaryOperators: NonAssignment

# Braces are usually attached, but not after functions or class declarations.
BreakBeforeBraces: Custom
BraceWrapping:
    AfterClass: true
    AfterControlStatement: false
    AfterEnum: false
    AfterFunction: true
    AfterNamespace: false
    AfterObjCDeclaration: false
    AfterStruct: false
    AfterUnion: false
    BeforeCatch: false
    BeforeElse: false
    IndentBraces: false

# When constructor initializers do not fit on one line, put them each on a new line.
ConstructorInitializerAllOnOneLineOrOnePerLine: true
# Indent initializers by 4 spaces
ConstructorInitializerIndentWidth: 4

# Indent width for line continuations.
ContinuationIndentWidth: 8

# No indentation for namespaces.
NamespaceIndentation: None

# Horizontally align arguments after an open bracket.
# The coding style does not specify the following, but this is what gives
# results closest to the existing code.
AlignAfterOpenBracket: true
AlwaysBreakTemplateDeclarations: true

# Ideally we should also allow less short function in a single line, but
# clang-format does not handle that.
AllowShortFunctionsOnASingleLine: Inline

# short case labels will be contracted to a single line.
AllowShortCaseLabelsOnASingleLine: true

# The coding style specifies some include order categories, but also tells to
# separate categories with an empty line. It does not specify the order within
# the categories. Since the SortInclude feature of clang-format does not
# re-order includes separated by empty lines, the feature is not used.
SortIncludes: false

# macros for which the opening brace stays attached.
ForEachMacros:   [ foreach, BOOST_FOREACH  ]

# Align the block define: required by clang-9.0
AlignConsecutiveMacros: true

# If true, aligns trailing comments.
AlignTrailingComments: true

# If true, consecutive namespace declarations will be on the same
# line. If false, each namespace is declared on a new line.
CompactNamespaces: true